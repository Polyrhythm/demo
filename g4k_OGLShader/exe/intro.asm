; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\polyr\Development\cpp\4k\g4k_OGLShader\src\intro.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BAF@IFEMAMMD@void?5main?$CIvoid?$CJ?$HLvec2?5c?$DNvec2?$CI?90?47@ ; `string'
PUBLIC	??_C@_0EB@JFIHMFPA@void?5main?$CIvoid?$CJ?$HLgl_Position?$DNgl_V@ ; `string'
;	COMDAT ??_C@_0EB@JFIHMFPA@void?5main?$CIvoid?$CJ?$HLgl_Position?$DNgl_V@
CONST	SEGMENT
??_C@_0EB@JFIHMFPA@void?5main?$CIvoid?$CJ?$HLgl_Position?$DNgl_V@ DB 'voi'
	DB	'd main(void){gl_Position=gl_Vertex;gl_TexCoord[0]=gl_Vertex;}'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BAF@IFEMAMMD@void?5main?$CIvoid?$CJ?$HLvec2?5c?$DNvec2?$CI?90?47@
CONST	SEGMENT
??_C@_0BAF@IFEMAMMD@void?5main?$CIvoid?$CJ?$HLvec2?5c?$DNvec2?$CI?90?47@ DB 'v'
	DB	'oid main(void){vec2 c=vec2(-0.75,0)+gl_TexCoord[0].xy*vec2(1.'
	DB	'33,1.0);vec2 z=vec2(0.0);float h=0.0;float m;for(int i=0;i<10'
	DB	'0;i++){z=vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y)+c;m=dot(z,z);if(m>'
	DB	'100000.0) break;h+=1.0;}h=h+1.0-log2(.5*log(m));gl_FragColor='
	DB	'vec4(h/100.0);}', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?fragmentShader@@3PBDB DD FLAT:??_C@_0BAF@IFEMAMMD@void?5main?$CIvoid?$CJ?$HLvec2?5c?$DNvec2?$CI?90?47@ ; fragmentShader
?vertexShader@@3PBDB DD FLAT:??_C@_0EB@JFIHMFPA@void?5main?$CIvoid?$CJ?$HLgl_Position?$DNgl_V@ ; vertexShader
_DATA	ENDS
PUBLIC	?intro_compute@@YGHXZ				; intro_compute
PUBLIC	??_C@_0BA@FLKLHNKP@glCreateProgram?$AA@		; `string'
PUBLIC	??_C@_0P@HGHBNC@glCreateShader?$AA@		; `string'
PUBLIC	??_C@_0P@DFHCPFMO@glShaderSource?$AA@		; `string'
PUBLIC	??_C@_0BA@DGIEGONF@glCompileShader?$AA@		; `string'
PUBLIC	??_C@_0P@LDMLEABL@glAttachShader?$AA@		; `string'
PUBLIC	??_C@_0O@PIOEEBPO@glLinkProgram?$AA@		; `string'
PUBLIC	??_C@_0N@ICBDHBI@glUseProgram?$AA@		; `string'
EXTRN	__imp__wglGetProcAddress@4:PROC
EXTRN	__imp__glRects@16:PROC
;	COMDAT ??_C@_0N@ICBDHBI@glUseProgram?$AA@
CONST	SEGMENT
??_C@_0N@ICBDHBI@glUseProgram?$AA@ DB 'glUseProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIOEEBPO@glLinkProgram?$AA@
CONST	SEGMENT
??_C@_0O@PIOEEBPO@glLinkProgram?$AA@ DB 'glLinkProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDMLEABL@glAttachShader?$AA@
CONST	SEGMENT
??_C@_0P@LDMLEABL@glAttachShader?$AA@ DB 'glAttachShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DGIEGONF@glCompileShader?$AA@
CONST	SEGMENT
??_C@_0BA@DGIEGONF@glCompileShader?$AA@ DB 'glCompileShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFHCPFMO@glShaderSource?$AA@
CONST	SEGMENT
??_C@_0P@DFHCPFMO@glShaderSource?$AA@ DB 'glShaderSource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HGHBNC@glCreateShader?$AA@
CONST	SEGMENT
??_C@_0P@HGHBNC@glCreateShader?$AA@ DB 'glCreateShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FLKLHNKP@glCreateProgram?$AA@
CONST	SEGMENT
??_C@_0BA@FLKLHNKP@glCreateProgram?$AA@ DB 'glCreateProgram', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogspy
; File c:\users\polyr\development\cpp\4k\g4k_oglshader\src\intro.cpp
;	COMDAT ?intro_compute@@YGHXZ
_TEXT	SEGMENT
?intro_compute@@YGHXZ PROC				; intro_compute, COMDAT

; 100  : {

	push	ebx
	push	ebp

; 101  :     int pid = ((PFNGLCREATEPROGRAMPROC)wglGetProcAddress("glCreateProgram"))();

	mov	ebp, DWORD PTR __imp__wglGetProcAddress@4
	push	esi
	push	edi
	push	OFFSET ??_C@_0BA@FLKLHNKP@glCreateProgram?$AA@
	call	ebp
	call	eax

; 102  : 	const int vsId = ((PFNGLCREATESHADERPROC)wglGetProcAddress("glCreateShader"))(GL_VERTEX_SHADER);

	push	35633					; 00008b31H
	mov	edi, OFFSET ??_C@_0P@HGHBNC@glCreateShader?$AA@
	mov	ebx, eax
	push	edi
	call	ebp
	call	eax

; 103  : 	const int fsId = ((PFNGLCREATESHADERPROC)wglGetProcAddress("glCreateShader"))(GL_FRAGMENT_SHADER);	

	push	35632					; 00008b30H
	push	edi
	mov	esi, eax
	call	ebp
	call	eax

; 104  :     ((PFNGLSHADERSOURCEPROC)wglGetProcAddress("glShaderSource"))(vsId, 1, &vertexShader, 0);

	push	0
	push	OFFSET ?vertexShader@@3PBDB
	push	1
	push	esi
	push	OFFSET ??_C@_0P@DFHCPFMO@glShaderSource?$AA@
	mov	edi, eax
	call	ebp
	call	eax

; 105  :     ((PFNGLSHADERSOURCEPROC)wglGetProcAddress("glShaderSource"))(fsId, 1, &fragmentShader, 0);

	push	0
	push	OFFSET ?fragmentShader@@3PBDB
	push	1
	push	edi
	push	OFFSET ??_C@_0P@DFHCPFMO@glShaderSource?$AA@
	call	ebp
	call	eax

; 106  : 	((PFNGLCOMPILESHADERPROC)wglGetProcAddress("glCompileShader"))(vsId);

	push	esi
	push	OFFSET ??_C@_0BA@DGIEGONF@glCompileShader?$AA@
	call	ebp
	call	eax

; 107  : 	((PFNGLCOMPILESHADERPROC)wglGetProcAddress("glCompileShader"))(fsId);

	push	edi
	push	OFFSET ??_C@_0BA@DGIEGONF@glCompileShader?$AA@
	call	ebp
	call	eax

; 108  :     ((PFNGLATTACHSHADERPROC)wglGetProcAddress("glAttachShader"))(pid,vsId);

	push	esi
	push	ebx
	mov	esi, OFFSET ??_C@_0P@LDMLEABL@glAttachShader?$AA@
	push	esi
	call	ebp
	call	eax

; 109  :     ((PFNGLATTACHSHADERPROC)wglGetProcAddress("glAttachShader"))(pid,fsId);

	push	edi
	push	ebx
	push	esi
	call	ebp
	call	eax

; 110  :     ((PFNGLLINKPROGRAMPROC)wglGetProcAddress("glLinkProgram"))(pid);

	push	ebx
	push	OFFSET ??_C@_0O@PIOEEBPO@glLinkProgram?$AA@
	call	ebp
	call	eax

; 111  :     ((PFNGLUSEPROGRAMPROC)wglGetProcAddress("glUseProgram"))(pid);

	push	ebx
	push	OFFSET ??_C@_0N@ICBDHBI@glUseProgram?$AA@
	call	ebp
	call	eax

; 112  : 
; 113  :     glRects( -1, -1, 1, 1 );

	push	1
	push	1
	push	-1
	push	-1
	call	DWORD PTR __imp__glRects@16
	pop	edi
	pop	esi

; 114  : 
; 115  : 	return 1;

	xor	eax, eax
	pop	ebp
	inc	eax
	pop	ebx

; 116  : }

	ret	0
?intro_compute@@YGHXZ ENDP				; intro_compute
_TEXT	ENDS
END
