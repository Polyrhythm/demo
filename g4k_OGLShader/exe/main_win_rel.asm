; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\polyr\Development\cpp\4k\g4k_OGLShader\src\main_win_rel.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__fltused
_BSS	SEGMENT
__fltused DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
?screenSettings@@3U_devicemodeA@@A DB 00H		; screenSettings
	ORG $+31
	DW	00H
	DW	00H
	DW	09cH
	DW	00H
	DD	01c0000H
	DW	00H
	ORG $+14
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DB	00H
	ORG $+31
	DW	00H
	DD	020H
	DD	0400H
	DD	0300H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
CONST	SEGMENT
?pfd@@3UtagPIXELFORMATDESCRIPTOR@@B DW 028H		; pfd
	DW	01H
	DD	025H
	DB	00H
	DB	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	?entrypoint@@YGXXZ				; entrypoint
PUBLIC	??_C@_06GGHJAEBN@static?$AA@			; `string'
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__ChoosePixelFormat@8:PROC
EXTRN	__imp__SetPixelFormat@12:PROC
EXTRN	__imp__wglCreateContext@4:PROC
EXTRN	__imp__wglMakeCurrent@8:PROC
EXTRN	__imp__wglSwapLayerBuffers@8:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ShowCursor@4:PROC
EXTRN	__imp__ChangeDisplaySettingsA@8:PROC
EXTRN	?intro_compute@@YGHXZ:PROC			; intro_compute
;	COMDAT ??_C@_06GGHJAEBN@static?$AA@
CONST	SEGMENT
??_C@_06GGHJAEBN@static?$AA@ DB 'static', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogspy
; File c:\users\polyr\development\cpp\4k\g4k_oglshader\src\main_win_rel.cpp
;	COMDAT ?entrypoint@@YGXXZ
_TEXT	SEGMENT
?entrypoint@@YGXXZ PROC					; entrypoint, COMDAT

; 56   :     // full screen
; 57   :     if( ChangeDisplaySettings(&screenSettings,CDS_FULLSCREEN)!=DISP_CHANGE_SUCCESSFUL) return; ShowCursor( 0 );

	push	4
	push	OFFSET ?screenSettings@@3U_devicemodeA@@A
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8
	test	eax, eax
	jne	$LN1@entrypoint
	push	ebp
	push	edi
	xor	ebp, ebp
	push	ebp
	call	DWORD PTR __imp__ShowCursor@4

; 58   :     // create window
; 59   :     HDC hDC = GetDC(CreateWindow( "static",0,WS_POPUP|WS_VISIBLE,0,0,XRES,YRES,0,0,0,0));

	push	ebp
	push	ebp
	push	ebp
	push	ebp
	push	768					; 00000300H
	push	1024					; 00000400H
	push	ebp
	push	ebp
	push	-1879048192				; 90000000H
	push	ebp
	push	OFFSET ??_C@_06GGHJAEBN@static?$AA@
	push	ebp
	call	DWORD PTR __imp__CreateWindowExA@48
	push	eax
	call	DWORD PTR __imp__GetDC@4
	mov	edi, eax

; 60   :     // initalize opengl
; 61   :     SetPixelFormat(hDC,ChoosePixelFormat(hDC,&pfd),&pfd);

	mov	eax, OFFSET ?pfd@@3UtagPIXELFORMATDESCRIPTOR@@B
	push	eax
	push	eax
	push	edi
	call	DWORD PTR __imp__ChoosePixelFormat@8
	push	eax
	push	edi
	call	DWORD PTR __imp__SetPixelFormat@12

; 62   :     wglMakeCurrent(hDC,wglCreateContext(hDC));

	push	edi
	call	DWORD PTR __imp__wglCreateContext@4
	push	eax
	push	edi
	call	DWORD PTR __imp__wglMakeCurrent@8

; 63   : 
; 64   :     // init intro
; 65   :     intro_compute();

	call	?intro_compute@@YGHXZ			; intro_compute
$LL4@entrypoint:

; 66   : 
; 67   :     do 
; 68   :     {
; 69   :         wglSwapLayerBuffers( hDC, WGL_SWAP_MAIN_PLANE ); //SwapBuffers( hDC );

	push	1
	push	edi
	call	DWORD PTR __imp__wglSwapLayerBuffers@8

; 70   : 		Sleep(50);

	push	50					; 00000032H
	call	DWORD PTR __imp__Sleep@4

; 71   :     }while ( !GetAsyncKeyState(VK_ESCAPE) );

	push	27					; 0000001bH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	test	ax, ax
	je	SHORT $LL4@entrypoint

; 72   : 
; 73   :     ChangeDisplaySettings( 0, 0 );

	push	ebp
	push	ebp
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8

; 74   :     ShowCursor(1);

	push	1
	call	DWORD PTR __imp__ShowCursor@4

; 75   : 
; 76   :     ExitProcess(0);

	push	ebp
	call	DWORD PTR __imp__ExitProcess@4
	pop	edi
	pop	ebp
$LN12@entrypoint:
$LN1@entrypoint:

; 77   : }

	ret	0
$LN11@entrypoint:
?entrypoint@@YGXXZ ENDP					; entrypoint
_TEXT	ENDS
END
