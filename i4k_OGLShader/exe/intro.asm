; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\polyr\Development\cpp\4k\i4k_OGLShader\src\intro.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0JF@OJAMNHDM@?6?$CDversion?5430?6?6layout?$CIlocation?5?$DN@ ; `string'
PUBLIC	??_C@_0BBE@ELLNBFKE@?6?$CDversion?5430?6?6layout?5?$CIlocation?5@ ; `string'
;	COMDAT ??_C@_0BBE@ELLNBFKE@?6?$CDversion?5430?6?6layout?5?$CIlocation?5@
CONST	SEGMENT
??_C@_0BBE@ELLNBFKE@?6?$CDversion?5430?6?6layout?5?$CIlocation?5@ DB 0aH, '#'
	DB	'version 430', 0aH, 0aH, 'layout (location = 0) uniform vec4 f'
	DB	'par[2];', 0aH, 'layout (location = 0) out vec4 fragColour;', 0aH
	DB	0aH, 'void main()', 0aH, '{', 0aH, '    float time = fpar[0].x'
	DB	';', 0aH, '    vec2 resolution = fpar[1].xy;', 0aH, 0aH, '    '
	DB	'vec2 uv = gl_FragCoord.xy / resolution.xy;', 0aH, '    ', 0aH
	DB	'    fragColour = vec4(uv.xy, 0.5, 1.0); ', 0aH, '}', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JF@OJAMNHDM@?6?$CDversion?5430?6?6layout?$CIlocation?5?$DN@
CONST	SEGMENT
??_C@_0JF@OJAMNHDM@?6?$CDversion?5430?6?6layout?$CIlocation?5?$DN@ DB 0aH
	DB	'#version 430', 0aH, 0aH, 'layout(location = 0) in vec2 inVer;'
	DB	0aH, 'out gl_PerVertex{ vec4 gl_Position; };', 0aH, 0aH, 'void'
	DB	' main()', 0aH, '{', 0aH, '    gl_Position = vec4(inVer, 0.0, '
	DB	'1.0);', 0aH, '}', 0aH, 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?vsh@@3PBDB DD	FLAT:??_C@_0JF@OJAMNHDM@?6?$CDversion?5430?6?6layout?$CIlocation?5?$DN@ ; vsh
?fsh@@3PBDB DD	FLAT:??_C@_0BBE@ELLNBFKE@?6?$CDversion?5430?6?6layout?5?$CIlocation?5@ ; fsh
_DATA	ENDS
PUBLIC	?intro_init@@YGHXZ				; intro_init
PUBLIC	?intro_do@@YGXJ@Z				; intro_do
PUBLIC	__real@44160000
PUBLIC	__real@44480000
EXTRN	__imp__glRects@16:PROC
EXTRN	?EXT_Init@@YGHXZ:PROC				; EXT_Init
EXTRN	?myglfunc@@3PAPAXA:BYTE				; myglfunc
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?fsid@@3HA DD	01H DUP (?)				; fsid
?fparams@@3PAMA DD 08H DUP (?)				; fparams
_BSS	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@44160000
CONST	SEGMENT
__real@44160000 DD 044160000r			; 600
CONST	ENDS
; Function compile flags: /Ogspy
; File c:\users\polyr\development\cpp\4k\i4k_oglshader\src\intro.cpp
;	COMDAT ?intro_do@@YGXJ@Z
_TEXT	SEGMENT
_time$ = 8						; size = 4
?intro_do@@YGXJ@Z PROC					; intro_do, COMDAT

; 63   :     //--- update parameters -----------------------------------------
; 64   : 
; 65   :     const float t  = 0.001f*(float)time;
; 66   : 
; 67   :     fparams[0] = (float)time;

	fild	DWORD PTR _time$[esp-4]

; 68   : 
; 69   :     fparams[4] = (float)XRES;
; 70   :     fparams[5] = (float)YRES;
; 71   : 
; 72   : 
; 73   :     //--- render -----------------------------------------
; 74   : 
; 75   :     oglProgramUniform4fv( fsid, 0, 4, fparams );

	push	OFFSET ?fparams@@3PAMA
	push	4
	push	0
	push	DWORD PTR ?fsid@@3HA
	fstp	DWORD PTR ?fparams@@3PAMA
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR ?fparams@@3PAMA+16
	fld	DWORD PTR __real@44160000
	fstp	DWORD PTR ?fparams@@3PAMA+20
	call	DWORD PTR ?myglfunc@@3PAPAXA+16

; 76   : 
; 77   :     glRects( -1, -1, 1, 1 );

	push	1
	push	1
	push	-1
	push	-1
	call	DWORD PTR __imp__glRects@16

; 78   : }

	ret	4
?intro_do@@YGXJ@Z ENDP					; intro_do
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\users\polyr\development\cpp\4k\i4k_oglshader\src\intro.cpp
;	COMDAT ?intro_init@@YGHXZ
_TEXT	SEGMENT
_pid$ = -4						; size = 4
?intro_init@@YGHXZ PROC					; intro_init, COMDAT

; 21   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 22   :     if( !EXT_Init() )

	call	?EXT_Init@@YGHXZ			; EXT_Init
	test	eax, eax
	je	SHORT $LN1@intro_init
$LN2@intro_init:
	push	esi
	push	edi

; 23   :         return 0;
; 24   : 
; 25   :     int vsid = oglCreateShaderProgramv( GL_VERTEX_SHADER,   1, &vsh );

	push	OFFSET ?vsh@@3PBDB
	xor	edi, edi
	inc	edi
	push	edi
	push	35633					; 00008b31H
	call	DWORD PTR ?myglfunc@@3PAPAXA

; 26   :         fsid = oglCreateShaderProgramv( GL_FRAGMENT_SHADER, 1, &fsh );

	push	OFFSET ?fsh@@3PBDB
	push	edi
	push	35632					; 00008b30H
	mov	esi, eax
	call	DWORD PTR ?myglfunc@@3PAPAXA
	mov	DWORD PTR ?fsid@@3HA, eax

; 27   :  
; 28   :     unsigned int pid;
; 29   :     oglGenProgramPipelines(1, &pid);

	lea	eax, DWORD PTR _pid$[ebp]
	push	eax
	push	edi
	call	DWORD PTR ?myglfunc@@3PAPAXA+4

; 30   :     oglBindProgramPipeline(pid);

	push	DWORD PTR _pid$[ebp]
	call	DWORD PTR ?myglfunc@@3PAPAXA+8

; 31   :     oglUseProgramStages(pid, GL_VERTEX_SHADER_BIT, vsid);

	push	esi
	push	edi
	push	DWORD PTR _pid$[ebp]
	call	DWORD PTR ?myglfunc@@3PAPAXA+12

; 32   :     oglUseProgramStages(pid, GL_FRAGMENT_SHADER_BIT, fsid);

	push	DWORD PTR ?fsid@@3HA
	push	2
	push	DWORD PTR _pid$[ebp]
	call	DWORD PTR ?myglfunc@@3PAPAXA+12

; 33   : 
; 34   :     #ifdef DEBUG
; 35   :         int		result;
; 36   :         char    info[1536];
; 37   :         oglGetProgramiv( vsid, GL_LINK_STATUS, &result );
; 38   :         oglGetProgramInfoLog( vsid, 1024, NULL, (char *)info );
; 39   :         if (!result) {
; 40   :             std::cout << info << std::endl;
; 41   :         }
; 42   :         oglGetProgramiv( fsid, GL_LINK_STATUS, &result );
; 43   :         oglGetProgramInfoLog( fsid, 1024, NULL, (char *)info );
; 44   :         if (!result) {
; 45   :             std::cout << info << std::endl;
; 46   :         }
; 47   :         oglGetProgramiv( pid,  GL_LINK_STATUS, &result );
; 48   :         oglGetProgramInfoLog( pid,  1024, NULL, (char *)info );
; 49   :         if (!result) {
; 50   :             std::cout << info << std::endl;
; 51   :         }
; 52   :     #endif
; 53   : 
; 54   :     return 1;

	mov	eax, edi
	pop	edi
	pop	esi
$LN1@intro_init:

; 55   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?intro_init@@YGHXZ ENDP					; intro_init
_TEXT	ENDS
END
