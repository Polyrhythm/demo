; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\polyr\Development\cpp\4k\i4k_OGL\src\main_win_rel.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__fltused
_BSS	SEGMENT
__fltused DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
?screenSettings@@3U_devicemodeA@@A DB 00H		; screenSettings
	ORG $+31
	DW	00H
	DW	00H
	DW	09cH
	DW	00H
	DD	01c0000H
	DW	00H
	ORG $+14
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DB	00H
	ORG $+31
	DW	00H
	DD	020H
	DD	0320H
	DD	0258H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
CONST	SEGMENT
?wavHeader@@3QBHB DD 046464952H				; wavHeader
	DD	08bf764H
	DD	045564157H
	DD	020746d66H
	DD	010H
	DD	020001H
	DD	0ac44H
	DD	02b110H
	DD	0100004H
	DD	061746164H
	DD	08bf740H
?pfd@@3UtagPIXELFORMATDESCRIPTOR@@B DW 028H		; pfd
	DW	01H
	DD	025H
	DB	00H
	DB	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	?entrypoint@@YGXXZ				; entrypoint
PUBLIC	??_C@_06GGHJAEBN@static?$AA@			; `string'
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__ChoosePixelFormat@8:PROC
EXTRN	__imp__SetPixelFormat@12:PROC
EXTRN	__imp__wglCreateContext@4:PROC
EXTRN	__imp__wglMakeCurrent@8:PROC
EXTRN	__imp__wglSwapLayerBuffers@8:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ShowCursor@4:PROC
EXTRN	__imp__ChangeDisplaySettingsA@8:PROC
EXTRN	__imp__sndPlaySoundA@8:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	?intro_init@@YGHXZ:PROC				; intro_init
EXTRN	?intro_do@@YGXJ@Z:PROC				; intro_do
EXTRN	?mzk_init@@YGXPAF@Z:PROC			; mzk_init
_BSS	SEGMENT
?myMuzik@@3PAFA DW 08bf756H DUP (?)			; myMuzik
_BSS	ENDS
;	COMDAT ??_C@_06GGHJAEBN@static?$AA@
CONST	SEGMENT
??_C@_06GGHJAEBN@static?$AA@ DB 'static', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogspy
; File c:\users\polyr\development\cpp\4k\i4k_ogl\src\main_win_rel.cpp
;	COMDAT ?entrypoint@@YGXXZ
_TEXT	SEGMENT
?entrypoint@@YGXXZ PROC					; entrypoint, COMDAT

; 66   :     // full screen
; 67   :     if( ChangeDisplaySettings(&screenSettings,CDS_FULLSCREEN)!=DISP_CHANGE_SUCCESSFUL) return;

	push	4
	push	OFFSET ?screenSettings@@3U_devicemodeA@@A
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8
	test	eax, eax
	jne	$LN1@entrypoint

; 68   :     ShowCursor( 0 );

	push	ebx
	xor	ebx, ebx
	push	ebx
	call	DWORD PTR __imp__ShowCursor@4

; 69   :     // create window
; 70   :     HWND hWnd = CreateWindow( "static",0,WS_POPUP|WS_VISIBLE|WS_MAXIMIZE,0,0,0,0,0,0,0,0);

	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	-1862270976				; 91000000H
	push	ebx
	push	OFFSET ??_C@_06GGHJAEBN@static?$AA@
	push	ebx
	call	DWORD PTR __imp__CreateWindowExA@48

; 71   :     if( !hWnd ) return;

	test	eax, eax
	je	$LN14@entrypoint

; 72   :     HDC hDC = GetDC(hWnd);

	push	eax
	call	DWORD PTR __imp__GetDC@4
	mov	ebx, eax

; 73   :     // initalize opengl
; 74   :     if( !SetPixelFormat(hDC,ChoosePixelFormat(hDC,&pfd),&pfd) ) return;

	mov	eax, OFFSET ?pfd@@3UtagPIXELFORMATDESCRIPTOR@@B
	push	eax
	push	eax
	push	ebx
	call	DWORD PTR __imp__ChoosePixelFormat@8
	push	eax
	push	ebx
	call	DWORD PTR __imp__SetPixelFormat@12
	test	eax, eax
	je	$LN14@entrypoint

; 75   :     wglMakeCurrent(hDC,wglCreateContext(hDC));

	push	ebx
	call	DWORD PTR __imp__wglCreateContext@4
	push	eax
	push	ebx
	call	DWORD PTR __imp__wglMakeCurrent@8

; 76   : 
; 77   :     // init intro
; 78   :     if( !intro_init() ) return;

	call	?intro_init@@YGHXZ			; intro_init
	test	eax, eax
	je	SHORT $LN14@entrypoint

; 79   : 
; 80   :     // init mzk
; 81   :     mzk_init( myMuzik+22 );

	push	ebp
	push	esi
	push	edi
	push	OFFSET ?myMuzik@@3PAFA+44
	call	?mzk_init@@YGXPAF@Z			; mzk_init

; 82   :     memcpy( myMuzik, wavHeader, 44 );

	push	11					; 0000000bH
	pop	ecx

; 83   : 
; 84   :     // play mzk
; 85   :     sndPlaySound( (const char*)&myMuzik, SND_ASYNC|SND_MEMORY );

	push	5
	mov	esi, OFFSET ?wavHeader@@3QBHB
	mov	edi, OFFSET ?myMuzik@@3PAFA
	rep movsd
	push	OFFSET ?myMuzik@@3PAFA
	call	DWORD PTR __imp__sndPlaySoundA@8

; 86   : 
; 87   :     // play intro
; 88   :     long t;
; 89   :     long to = timeGetTime();

	mov	edi, DWORD PTR __imp__timeGetTime@0
	call	edi
	mov	ebp, eax
$LL4@entrypoint:

; 90   :     do 
; 91   :     {
; 92   :         t = timeGetTime() - to;

	call	edi
	mov	esi, eax
	sub	esi, ebp

; 93   :         intro_do( t );

	push	esi
	call	?intro_do@@YGXJ@Z			; intro_do

; 94   :         wglSwapLayerBuffers( hDC, WGL_SWAP_MAIN_PLANE ); //SwapBuffers( hDC );

	push	1
	push	ebx
	call	DWORD PTR __imp__wglSwapLayerBuffers@8

; 95   :     }while ( !GetAsyncKeyState(VK_ESCAPE) && t<(MZK_DURATION*1000) );

	push	27					; 0000001bH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	test	ax, ax
	jne	SHORT $LN9@entrypoint
	cmp	esi, 104000				; 00019640H
	jl	SHORT $LL4@entrypoint
$LN9@entrypoint:

; 96   : 
; 97   :     #ifdef CLEANDESTROY
; 98   :     sndPlaySound(0,0);
; 99   :     ChangeDisplaySettings( 0, 0 );
; 100  :     ShowCursor(1);
; 101  :     #endif
; 102  : 
; 103  :     ExitProcess(0);

	push	0
	call	DWORD PTR __imp__ExitProcess@4
	pop	edi
	pop	esi
	pop	ebp
$LN17@entrypoint:
$LN14@entrypoint:
	pop	ebx
$LN1@entrypoint:

; 104  : }

	ret	0
$LN16@entrypoint:
?entrypoint@@YGXXZ ENDP					; entrypoint
_TEXT	ENDS
END
