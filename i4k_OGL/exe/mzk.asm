; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\polyr\Development\cpp\4k\i4k_OGL\src\mzk.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?mzk_init@@YGXPAF@Z				; mzk_init
PUBLIC	__real@3d8062d7
PUBLIC	__real@3dab5dc4
PUBLIC	__real@46fffe00
EXTRN	__fltused:DWORD
;	COMDAT __real@46fffe00
CONST	SEGMENT
__real@46fffe00 DD 046fffe00r			; 32767
CONST	ENDS
;	COMDAT __real@3dab5dc4
CONST	SEGMENT
__real@3dab5dc4 DD 03dab5dc4r			; 0.0836749
CONST	ENDS
;	COMDAT __real@3d8062d7
CONST	SEGMENT
__real@3d8062d7 DD 03d8062d7r			; 0.0626885
CONST	ENDS
; Function compile flags: /Ogspy
; File c:\users\polyr\development\cpp\4k\i4k_ogl\src\system.h
;	COMDAT ?f2i@@YGHM@Z
_TEXT	SEGMENT
_tmp$ = -4						; size = 4
_x$ = 8							; size = 4
?f2i@@YGHM@Z PROC					; f2i, COMDAT

; 11   : {

	push	ecx

; 12   :     int tmp;
; 13   :     _asm fld dword ptr[x]

	fld	DWORD PTR _x$[esp]

; 14   :         _asm fistp dword ptr[tmp];

	fistp	DWORD PTR _tmp$[esp+4]

; 15   :     return tmp;

	mov	eax, DWORD PTR _tmp$[esp+4]

; 16   : }

	pop	ecx
	ret	4
?f2i@@YGHM@Z ENDP					; f2i
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\users\polyr\development\cpp\4k\i4k_ogl\src\mzk.cpp
;	COMDAT ?mzk_init@@YGXPAF@Z
_TEXT	SEGMENT
_tmp$1 = -12						; size = 4
_tmp$2 = -8						; size = 4
tv223 = -4						; size = 4
_i$3 = -4						; size = 4
_x$ = 8							; size = 4
_x$ = 8							; size = 4
_buffer$ = 8						; size = 4
?mzk_init@@YGXPAF@Z PROC				; mzk_init, COMDAT

; 13   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 14   :     for( int i=0; i<MZK_NUMSAMPLES; i++ ) 

	fld	DWORD PTR __real@3d8062d7
	xor	ecx, ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	fld	DWORD PTR __real@46fffe00
	mov	DWORD PTR _i$3[ebp], ecx
	jmp	SHORT $LN4@mzk_init
$LN21@mzk_init:
	fxch	ST(1)
$LN4@mzk_init:

; 15   :     {
; 16   :         const float fl = sinf( 6.2831f*440.0f * (float)i/(float)MZK_RATE );

	fild	DWORD PTR _i$3[ebp]
	fst	DWORD PTR tv223[ebp]
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fsin

; 17   :         const float fr = sinf( 6.2831f*587.3f * (float)i/(float)MZK_RATE );
; 18   :         buffer[2 * i + 0] = f2i(fl*32767.0f);

	fmulp	ST(1), ST(0)
	fstp	DWORD PTR _x$[ebp]
	fld	DWORD PTR _x$[ebp]
	fistp	DWORD PTR _tmp$2[ebp]
	fld	DWORD PTR tv223[ebp]
	fmul	DWORD PTR __real@3dab5dc4
	mov	ax, WORD PTR _tmp$2[ebp]
	mov	WORD PTR [edx+ecx*4], ax
	fsin

; 19   :         buffer[2 * i + 1] = f2i(fr*32767.0f);

	fmul	DWORD PTR __real@46fffe00
	fstp	DWORD PTR _x$[ebp]
	fld	DWORD PTR _x$[ebp]
	fistp	DWORD PTR _tmp$1[ebp]
	mov	ax, WORD PTR _tmp$1[ebp]
	fld	DWORD PTR __real@46fffe00
	fld	DWORD PTR __real@3d8062d7
	mov	WORD PTR [edx+ecx*4+2], ax
	inc	ecx
	mov	DWORD PTR _i$3[ebp], ecx
	cmp	ecx, 4586400				; 0045fba0H
	jl	SHORT $LN21@mzk_init
	fstp	ST(1)
	fstp	ST(0)

; 20   :     }
; 21   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?mzk_init@@YGXPAF@Z ENDP				; mzk_init
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\math.h
;	COMDAT _sinf
_TEXT	SEGMENT
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 736  :         return (float)sin(_X);

	fld	DWORD PTR __X$[esp-4]
	fsin

; 737  :     }

	ret	0
_sinf	ENDP
_TEXT	ENDS
END
