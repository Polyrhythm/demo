; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\polyr\Development\cpp\4k\g4k_Software\src\main_win_rel.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__fltused
_BSS	SEGMENT
__fltused DD	01H DUP (?)
?buffer@@3PAIA DD 0c0000H DUP (?)			; buffer
_BSS	ENDS
_DATA	SEGMENT
?screenSettings@@3U_devicemodeA@@A DB 00H		; screenSettings
	ORG $+31
	DW	00H
	DW	00H
	DW	09cH
	DW	00H
	DD	01c0000H
	DW	00H
	ORG $+14
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DB	00H
	ORG $+31
	DW	00H
	DD	020H
	DD	0400H
	DD	0300H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
CONST	SEGMENT
?bmi@@3UtagBITMAPINFO@@B DD 028H			; bmi
	DD	0400H
	DD	0fffffd00H
	DW	01H
	DW	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
PUBLIC	?entrypoint@@YGXXZ				; entrypoint
PUBLIC	??_C@_06GGHJAEBN@static?$AA@			; `string'
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__GetSystemInfo@4:PROC
EXTRN	__imp__StretchDIBits@52:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ShowCursor@4:PROC
EXTRN	__imp__ChangeDisplaySettingsA@8:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	?intro_compute@@YGXPAIH@Z:PROC			; intro_compute
;	COMDAT ??_C@_06GGHJAEBN@static?$AA@
CONST	SEGMENT
??_C@_06GGHJAEBN@static?$AA@ DB 'static', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogspy
; File c:\users\polyr\development\cpp\4k\g4k_software\src\main_win_rel.cpp
;	COMDAT ?entrypoint@@YGXXZ
_TEXT	SEGMENT
_si$ = -36						; size = 36
?entrypoint@@YGXXZ PROC					; entrypoint, COMDAT

; 40   : {

	sub	esp, 36					; 00000024H

; 41   :     SYSTEM_INFO si;
; 42   :     GetSystemInfo( &si );

	lea	eax, DWORD PTR _si$[esp+36]
	push	eax
	call	DWORD PTR __imp__GetSystemInfo@4

; 43   : 
; 44   : 	#ifdef ISFULLSCREEN
; 45   :     if( ChangeDisplaySettings(&screenSettings,CDS_FULLSCREEN)!=DISP_CHANGE_SUCCESSFUL) return; ShowCursor( 0 );

	push	4
	push	OFFSET ?screenSettings@@3U_devicemodeA@@A
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8
	test	eax, eax
	jne	$LN1@entrypoint
	push	ebx
	push	ebp
	push	esi
	push	edi
	xor	edi, edi
	push	edi
	call	DWORD PTR __imp__ShowCursor@4

; 46   :     #endif
; 47   : 
; 48   :     HDC hDC = GetDC( CreateWindowEx( WS_EX_TOPMOST, "static", 0, WS_VISIBLE|WS_POPUP|WS_CLIPSIBLINGS|WS_CLIPCHILDREN, 0, 0, SXRES, SYRES, 0, 0, 0, 0 ) );

	push	edi
	push	edi
	push	edi
	push	edi
	mov	ebx, 768				; 00000300H
	mov	ebp, 1024				; 00000400H
	push	ebx
	push	ebp
	push	edi
	push	edi
	push	-1778384896				; 96000000H
	push	edi
	push	OFFSET ??_C@_06GGHJAEBN@static?$AA@
	push	8
	call	DWORD PTR __imp__CreateWindowExA@48
	push	eax
	call	DWORD PTR __imp__GetDC@4

; 49   : 
; 50   : 	intro_compute( buffer+SXRES*(SYRES-IYRES)/2+(SXRES-IXRES)/2, si.dwNumberOfProcessors);

	push	DWORD PTR _si$[esp+72]
	mov	esi, eax
	push	OFFSET ?buffer@@3PAIA+393216
	call	?intro_compute@@YGXPAIH@Z		; intro_compute

; 51   : 
; 52   :     long to = timeGetTime();

	call	DWORD PTR __imp__timeGetTime@0
$LL4@entrypoint:

; 53   :     do
; 54   :     {
; 55   : 	    StretchDIBits(hDC,0,0,SXRES,SYRES,0,0,SXRES,SYRES,buffer,&bmi,DIB_RGB_COLORS,SRCCOPY);

	push	13369376				; 00cc0020H
	push	edi
	push	OFFSET ?bmi@@3UtagBITMAPINFO@@B
	push	OFFSET ?buffer@@3PAIA
	push	ebx
	push	ebp
	push	edi
	push	edi
	push	ebx
	push	ebp
	push	edi
	push	edi
	push	esi
	call	DWORD PTR __imp__StretchDIBits@52

; 56   : 		Sleep(50);

	push	50					; 00000032H
	call	DWORD PTR __imp__Sleep@4

; 57   :     }while( !GetAsyncKeyState(VK_ESCAPE));

	push	27					; 0000001bH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	test	ax, ax
	je	SHORT $LL4@entrypoint

; 58   : 
; 59   :     ExitProcess(0);

	push	edi
	call	DWORD PTR __imp__ExitProcess@4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
$LN12@entrypoint:
$LN1@entrypoint:

; 60   : }

	add	esp, 36					; 00000024H
	ret	0
$LN11@entrypoint:
?entrypoint@@YGXXZ ENDP					; entrypoint
_TEXT	ENDS
END
