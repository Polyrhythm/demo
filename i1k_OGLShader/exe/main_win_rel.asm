; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	C:\Users\polyr\Development\cpp\4k\i1k_OGLShader\src\main_win_rel.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BCA@GMOMBKBM@void?5main?$CI?$CJ?$HLvec2?5v?$DN?91?4?$CLgl_FragCo@ ; `string'
CONST	SEGMENT
?pfd@@3UtagPIXELFORMATDESCRIPTOR@@B DW 00H		; pfd
	DW	00H
	DD	021H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0BCA@GMOMBKBM@void?5main?$CI?$CJ?$HLvec2?5v?$DN?91?4?$CLgl_FragCo@
CONST	SEGMENT
??_C@_0BCA@GMOMBKBM@void?5main?$CI?$CJ?$HLvec2?5v?$DN?91?4?$CLgl_FragCo@ DB 'v'
	DB	'oid main(){vec2 v=-1.+gl_FragCoord.xy/vec2(400.,300.);float r'
	DB	'=pow(pow(abs(v.x),18.)+pow(abs(v.y),10.),1.8/28.);vec2 t=vec2'
	DB	'(gl_Color.x*64.+1./r,atan(v.x,v.y));t=fract(2*t)-.5;vec4 col='
	DB	'(1-pow(dot(t.xy,t.xy),.3))*vec4(2,1.8,1.6,0)+vec4(.3,.2,.1,0)'
	DB	'+.12*vec4(v,0,0);gl_FragColor=col/(2.*r);}', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?fragmentShader@@3PBDB DD FLAT:??_C@_0BCA@GMOMBKBM@void?5main?$CI?$CJ?$HLvec2?5v?$DN?91?4?$CLgl_FragCo@ ; fragmentShader
	ORG $+4
?screenSettings@@3U_devicemodeA@@A DB 00H		; screenSettings
	ORG $+31
	DW	00H
	DW	00H
	DW	09cH
	DW	00H
	DD	01c0000H
	DW	00H
	ORG $+14
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DB	00H
	ORG $+31
	DW	00H
	DD	020H
	DD	0500H
	DD	02d0H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
PUBLIC	?entrypoint@@YGXXZ				; entrypoint
PUBLIC	??_C@_04NABONMNG@edit?$AA@			; `string'
PUBLIC	??_C@_0BA@FLKLHNKP@glCreateProgram?$AA@		; `string'
PUBLIC	??_C@_0P@HGHBNC@glCreateShader?$AA@		; `string'
PUBLIC	??_C@_0P@DFHCPFMO@glShaderSource?$AA@		; `string'
PUBLIC	??_C@_0BA@DGIEGONF@glCompileShader?$AA@		; `string'
PUBLIC	??_C@_0P@LDMLEABL@glAttachShader?$AA@		; `string'
PUBLIC	??_C@_0O@PIOEEBPO@glLinkProgram?$AA@		; `string'
PUBLIC	??_C@_0N@ICBDHBI@glUseProgram?$AA@		; `string'
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__ChoosePixelFormat@8:PROC
EXTRN	__imp__SetPixelFormat@12:PROC
EXTRN	__imp__wglCreateContext@4:PROC
EXTRN	__imp__wglGetProcAddress@4:PROC
EXTRN	__imp__wglMakeCurrent@8:PROC
EXTRN	__imp__SwapBuffers@4:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ShowCursor@4:PROC
EXTRN	__imp__ChangeDisplaySettingsA@8:PROC
EXTRN	__imp__glColor3us@12:PROC
EXTRN	__imp__glRects@16:PROC
;	COMDAT ??_C@_0N@ICBDHBI@glUseProgram?$AA@
CONST	SEGMENT
??_C@_0N@ICBDHBI@glUseProgram?$AA@ DB 'glUseProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIOEEBPO@glLinkProgram?$AA@
CONST	SEGMENT
??_C@_0O@PIOEEBPO@glLinkProgram?$AA@ DB 'glLinkProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDMLEABL@glAttachShader?$AA@
CONST	SEGMENT
??_C@_0P@LDMLEABL@glAttachShader?$AA@ DB 'glAttachShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DGIEGONF@glCompileShader?$AA@
CONST	SEGMENT
??_C@_0BA@DGIEGONF@glCompileShader?$AA@ DB 'glCompileShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFHCPFMO@glShaderSource?$AA@
CONST	SEGMENT
??_C@_0P@DFHCPFMO@glShaderSource?$AA@ DB 'glShaderSource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HGHBNC@glCreateShader?$AA@
CONST	SEGMENT
??_C@_0P@HGHBNC@glCreateShader?$AA@ DB 'glCreateShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FLKLHNKP@glCreateProgram?$AA@
CONST	SEGMENT
??_C@_0BA@FLKLHNKP@glCreateProgram?$AA@ DB 'glCreateProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NABONMNG@edit?$AA@
CONST	SEGMENT
??_C@_04NABONMNG@edit?$AA@ DB 'edit', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogspy
; File c:\users\polyr\development\cpp\4k\i1k_oglshader\src\main_win_rel.cpp
;	COMDAT ?entrypoint@@YGXXZ
_TEXT	SEGMENT
?entrypoint@@YGXXZ PROC					; entrypoint, COMDAT

; 36   :     // full screen
; 37   :     if( ChangeDisplaySettings(&screenSettings,CDS_FULLSCREEN)!=DISP_CHANGE_SUCCESSFUL) return; ShowCursor( 0 );

	push	4
	push	OFFSET ?screenSettings@@3U_devicemodeA@@A
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8
	test	eax, eax
	jne	$LN1@entrypoint
	push	ebx
	push	ebp
	push	esi
	push	edi
	xor	ebx, ebx
	push	ebx
	call	DWORD PTR __imp__ShowCursor@4

; 38   : 
; 39   :     // create windows
; 40   :     HDC hDC = GetDC( CreateWindow("edit", 0, WS_POPUP|WS_VISIBLE|WS_MAXIMIZE, 0,0,0,0,0,0,0,0) );

	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	ebx
	push	-1862270976				; 91000000H
	push	ebx
	push	OFFSET ??_C@_04NABONMNG@edit?$AA@
	push	ebx
	call	DWORD PTR __imp__CreateWindowExA@48
	push	eax
	call	DWORD PTR __imp__GetDC@4
	mov	ebp, eax

; 41   : 
; 42   :     // init opengl
; 43   :     SetPixelFormat(hDC, ChoosePixelFormat(hDC, &pfd), &pfd);

	mov	eax, OFFSET ?pfd@@3UtagPIXELFORMATDESCRIPTOR@@B
	push	eax
	push	eax
	push	ebp
	call	DWORD PTR __imp__ChoosePixelFormat@8
	push	eax
	push	ebp
	call	DWORD PTR __imp__SetPixelFormat@12

; 44   :     wglMakeCurrent(hDC, wglCreateContext(hDC));

	push	ebp
	call	DWORD PTR __imp__wglCreateContext@4
	push	eax
	push	ebp
	call	DWORD PTR __imp__wglMakeCurrent@8

; 45   : 
; 46   :     // create shader
; 47   :     const int p = ((PFNGLCREATEPROGRAMPROC)wglGetProcAddress("glCreateProgram"))();

	mov	ebx, DWORD PTR __imp__wglGetProcAddress@4
	push	OFFSET ??_C@_0BA@FLKLHNKP@glCreateProgram?$AA@
	call	ebx
	call	eax

; 48   :     const int s = ((PFNGLCREATESHADERPROC)wglGetProcAddress("glCreateShader"))(GL_FRAGMENT_SHADER);	

	push	35632					; 00008b30H
	push	OFFSET ??_C@_0P@HGHBNC@glCreateShader?$AA@
	mov	edi, eax
	call	ebx
	call	eax

; 49   :     ((PFNGLSHADERSOURCEPROC)wglGetProcAddress("glShaderSource"))(s, 1, &fragmentShader, 0);

	push	0
	push	OFFSET ?fragmentShader@@3PBDB
	push	1
	mov	esi, eax
	push	esi
	push	OFFSET ??_C@_0P@DFHCPFMO@glShaderSource?$AA@
	call	ebx
	call	eax

; 50   :     ((PFNGLCOMPILESHADERPROC)wglGetProcAddress("glCompileShader"))(s);

	push	esi
	push	OFFSET ??_C@_0BA@DGIEGONF@glCompileShader?$AA@
	call	ebx
	call	eax

; 51   :     ((PFNGLATTACHSHADERPROC)wglGetProcAddress("glAttachShader"))(p,s);

	push	esi
	push	edi
	push	OFFSET ??_C@_0P@LDMLEABL@glAttachShader?$AA@
	call	ebx
	call	eax

; 52   :     ((PFNGLLINKPROGRAMPROC)wglGetProcAddress("glLinkProgram"))(p);

	push	edi
	push	OFFSET ??_C@_0O@PIOEEBPO@glLinkProgram?$AA@
	call	ebx
	call	eax

; 53   :     ((PFNGLUSEPROGRAMPROC)wglGetProcAddress("glUseProgram"))(p);

	push	edi
	push	OFFSET ??_C@_0N@ICBDHBI@glUseProgram?$AA@
	call	ebx
	call	eax
	xor	ebx, ebx
$LL4@entrypoint:

; 54   : 
; 55   :     // run
; 56   :     do
; 57   :     { 
; 58   :         glColor3us((unsigned short)GetTickCount(),0,0);

	push	ebx
	push	ebx
	call	DWORD PTR __imp__GetTickCount@0
	push	eax
	call	DWORD PTR __imp__glColor3us@12

; 59   :         glRects(-1,-1,1,1);

	push	1
	push	1
	push	-1
	push	-1
	call	DWORD PTR __imp__glRects@16

; 60   :         SwapBuffers(hDC); //wglSwapLayerBuffers( hDC, WGL_SWAP_MAIN_PLANE );

	push	ebp
	call	DWORD PTR __imp__SwapBuffers@4

; 61   :     }while ( !GetAsyncKeyState(VK_ESCAPE) );

	push	27					; 0000001bH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	test	ax, ax
	je	SHORT $LL4@entrypoint

; 62   : 
; 63   :     ExitProcess( 0 );

	push	ebx
	call	DWORD PTR __imp__ExitProcess@4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
$LN12@entrypoint:
$LN1@entrypoint:

; 64   : }

	ret	0
$LN11@entrypoint:
?entrypoint@@YGXXZ ENDP					; entrypoint
_TEXT	ENDS
END
